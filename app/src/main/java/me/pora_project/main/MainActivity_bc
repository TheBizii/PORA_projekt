package si.um.feri.kotlinmqttexample

import android.os.Bundle
import android.util.Log
import androidx.appcompat.app.AppCompatActivity
import org.eclipse.paho.client.mqttv3.IMqttDeliveryToken
import org.eclipse.paho.client.mqttv3.MqttCallback
import org.eclipse.paho.client.mqttv3.MqttMessage

class MainActivity : AppCompatActivity() {

    private lateinit var binding: ActivityMainBinding
    private lateinit var mqttHelper: MqttHelper

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        binding = ActivityMainBinding.inflate(layoutInflater)
        setContentView(binding.root)

        mqttHelper = MqttHelper(applicationContext)
        startMqtt()

        binding.btnPublish.setOnClickListener {
            val payload = binding.etPayload.text.toString()
            mqttHelper.publish(MqttHelper.SUBSCRIPTION_TOPIC, payload)
        }
    }

    private fun startMqtt() {
        mqttHelper.mqttClient.setCallback(object : MqttCallback {
            override fun messageArrived(topic: String?, message: MqttMessage?) {
                Log.d(MqttHelper.TAG, "Receive message: ${message.toString()} from topic: $topic")
                binding.tvPayload.text = message.toString()
            }

            override fun connectionLost(cause: Throwable?) {
                Log.d(MqttHelper.TAG, "Connection lost ${cause.toString()}")
            }

            override fun deliveryComplete(token: IMqttDeliveryToken?) {

            }
        })
    }

    override fun onDestroy() {
        super.onDestroy()
        mqttHelper.disconnect()
    }
}